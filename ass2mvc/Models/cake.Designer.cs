//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("caketradeModel", "user2cake", "Cake", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ass2mvc.Models.Cake), "Userinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ass2mvc.Models.Userinfo), true)]

#endregion

namespace ass2mvc.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class caketradeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new caketradeEntities object using the connection string found in the 'caketradeEntities' section of the application configuration file.
        /// </summary>
        public caketradeEntities() : base("name=caketradeEntities", "caketradeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new caketradeEntities object.
        /// </summary>
        public caketradeEntities(string connectionString) : base(connectionString, "caketradeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new caketradeEntities object.
        /// </summary>
        public caketradeEntities(EntityConnection connection) : base(connection, "caketradeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cake> Cakes
        {
            get
            {
                if ((_Cakes == null))
                {
                    _Cakes = base.CreateObjectSet<Cake>("Cakes");
                }
                return _Cakes;
            }
        }
        private ObjectSet<Cake> _Cakes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Userinfo> Userinfoes
        {
            get
            {
                if ((_Userinfoes == null))
                {
                    _Userinfoes = base.CreateObjectSet<Userinfo>("Userinfoes");
                }
                return _Userinfoes;
            }
        }
        private ObjectSet<Userinfo> _Userinfoes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cakes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCakes(Cake cake)
        {
            base.AddObject("Cakes", cake);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Userinfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserinfoes(Userinfo userinfo)
        {
            base.AddObject("Userinfoes", userinfo);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="caketradeModel", Name="Cake")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cake : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cake object.
        /// </summary>
        /// <param name="cakeID">Initial value of the CakeID property.</param>
        public static Cake CreateCake(global::System.Int32 cakeID)
        {
            Cake cake = new Cake();
            cake.CakeID = cakeID;
            return cake;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CakeID
        {
            get
            {
                return _CakeID;
            }
            set
            {
                if (_CakeID != value)
                {
                    OnCakeIDChanging(value);
                    ReportPropertyChanging("CakeID");
                    _CakeID = StructuralObject.SetValidValue(value, "CakeID");
                    ReportPropertyChanged("CakeID");
                    OnCakeIDChanged();
                }
            }
        }
        private global::System.Int32 _CakeID;
        partial void OnCakeIDChanging(global::System.Int32 value);
        partial void OnCakeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CakeName
        {
            get
            {
                return _CakeName;
            }
            set
            {
                OnCakeNameChanging(value);
                ReportPropertyChanging("CakeName");
                _CakeName = StructuralObject.SetValidValue(value, true, "CakeName");
                ReportPropertyChanged("CakeName");
                OnCakeNameChanged();
            }
        }
        private global::System.String _CakeName;
        partial void OnCakeNameChanging(global::System.String value);
        partial void OnCakeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, "Time");
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _Time;
        partial void OnTimeChanging(Nullable<global::System.Int32> value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Double> _Price;
        partial void OnPriceChanging(Nullable<global::System.Double> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("caketradeModel", "user2cake", "Userinfo")]
        public EntityCollection<Userinfo> Userinfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Userinfo>("caketradeModel.user2cake", "Userinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Userinfo>("caketradeModel.user2cake", "Userinfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="caketradeModel", Name="Userinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userinfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Userinfo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Userinfo CreateUserinfo(global::System.Int32 id)
        {
            Userinfo userinfo = new Userinfo();
            userinfo.ID = id;
            return userinfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CakeID
        {
            get
            {
                return _CakeID;
            }
            set
            {
                OnCakeIDChanging(value);
                ReportPropertyChanging("CakeID");
                _CakeID = StructuralObject.SetValidValue(value, "CakeID");
                ReportPropertyChanged("CakeID");
                OnCakeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CakeID;
        partial void OnCakeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCakeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mailbox
        {
            get
            {
                return _Mailbox;
            }
            set
            {
                OnMailboxChanging(value);
                ReportPropertyChanging("Mailbox");
                _Mailbox = StructuralObject.SetValidValue(value, true, "Mailbox");
                ReportPropertyChanged("Mailbox");
                OnMailboxChanged();
            }
        }
        private global::System.String _Mailbox;
        partial void OnMailboxChanging(global::System.String value);
        partial void OnMailboxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Profession
        {
            get
            {
                return _Profession;
            }
            set
            {
                OnProfessionChanging(value);
                ReportPropertyChanging("Profession");
                _Profession = StructuralObject.SetValidValue(value, true, "Profession");
                ReportPropertyChanged("Profession");
                OnProfessionChanged();
            }
        }
        private global::System.String _Profession;
        partial void OnProfessionChanging(global::System.String value);
        partial void OnProfessionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true, "Gender");
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, "Age");
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("caketradeModel", "user2cake", "Cake")]
        public Cake Cake
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cake>("caketradeModel.user2cake", "Cake").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cake>("caketradeModel.user2cake", "Cake").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cake> CakeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cake>("caketradeModel.user2cake", "Cake");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cake>("caketradeModel.user2cake", "Cake", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
